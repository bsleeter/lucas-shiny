selectData2 = reactive({
  stocks %>% filter(Ecosystem=="Yes", LUC %in% input$luc, GCM %in% input$gcm,  RCP %in% input$rcp, EcoregionName==input$ecoregion, StockGroup!="TEC") %>%
    filter(Timestep>=input$years[1], Timestep<=input$years[2])
})

output$stocksPlot2 <- renderPlot({
  ggplot(data=selectData2(), aes(x=Timestep, y=Mean/1000, fill=StockGroup, color=StockGroup)) +
    geom_bar(stat="identity") + 
    scale_fill_ipsum() +
    scale_color_ipsum() +
    facet_grid(RCP~GCM) +
    theme_ipsum_rc(14, grid="Y") +
    labs(x="Year", y="Million Metric Tons of Carbon", title="Average Projected Ecosystem Carbon Storage by Carbon Pool", subtitle="Living biomass (Live), dead organic matter (DOM), and soil organic carbon (SOC) storage") +
    theme(legend.position = "top", plot.margin=margin(30,5,5,5))
  
})


selectData2 = 
  stocks %>% filter(Ecosystem=="Yes", LUC == "BAU", GCM == "CanESM2",  RCP == "rcp45", EcoregionName=="State", StockGroup!="TEC") %>%
    filter(Timestep==2001 | Timestep==2100) %>% group_by(LUC,GCM,RCP,EcoregionName,StockGroup) %>% mutate(MeanChange=Mean-lag(Mean), LowerChange=Lower-lag(Lower), UpperChange=Upper-lag(Upper))
selectData2

selectData1 = 
  stocks %>% filter(Ecosystem=="Yes", LUC == "BAU", GCM == "CanESM2", RCP == "rcp45", EcoregionName=="State", StockGroup=="TEC") %>%
    filter(Timestep>=2050, Timestep<=2050)
selectData1











output$nppPlot <- renderPlotly({
  npp = ggplot(data=nppData(), aes(x=GCM, y=yrMean, fill=GCM, ymin=minMean, ymax=maxMean)) +
    geom_crossbar(stat="identity", show.legend = FALSE) +
    scale_fill_ipsum() +
    scale_color_ipsum() +
    facet_wrap(RCP~LUC) +
    theme_minimal() +
    labs(y="MMT C", caption="Average Annual NPP") +
    theme(plot.margin=margin(0,0,0,0), axis.text.x=element_blank())
  
  ggplotly(npp)
  
})



rhData = reactive({
  netFlux %>% filter(LUC %in% input$luc, GCM %in% input$gcm, RCP %in% input$rcp, EcoregionName==input$ecoregion, Flux=="Rh") %>%
    filter(Timestep>=input$years[1], Timestep<=input$years[2]) %>% group_by(LUC,GCM,RCP,EcoregionName,Flux) %>% summarise(yrMean=mean(Mean), minMean=min(Mean), maxMean=max(Mean))
})


output$rhPlot <- renderPlotly({
  rh = ggplot(data=rhData(), aes(x=GCM, y=yrMean, fill=GCM, ymin=minMean, ymax=maxMean)) +
    geom_crossbar(stat="identity", show.legend = FALSE) +
    scale_fill_ipsum() +
    scale_color_ipsum() +
    facet_wrap(RCP~LUC) +
    theme_minimal() +
    labs(y="MMT C", caption="Average Annual NPP") +
    theme(plot.margin=margin(0,0,0,0), axis.text.x=element_blank())
  
  ggplotly(rh)
  
})


nepData = reactive({
  netFlux %>% filter(LUC %in% input$luc, GCM %in% input$gcm, RCP %in% input$rcp, EcoregionName==input$ecoregion, Flux=="NEP") %>%
    filter(Timestep>=input$years[1], Timestep<=input$years[2]) %>% group_by(LUC,GCM,RCP,EcoregionName,Flux) %>% summarise(yrMean=mean(Mean), minMean=min(Mean), maxMean=max(Mean))
})


output$nepPlot <- renderPlotly({
  nep = ggplot(data=nepData(), aes(x=GCM, y=yrMean, fill=GCM, ymin=minMean, ymax=maxMean)) +
    geom_crossbar(stat="identity", show.legend = FALSE) +
    scale_fill_ipsum() +
    scale_color_ipsum() +
    facet_wrap(RCP~LUC) +
    theme_minimal() +
    labs(y="MMT C", caption="Average Annual NEP") +
    theme(plot.margin=margin(0,0,0,0), axis.text.x=element_blank())
  
  ggplotly(nep)
  
})



necbData = reactive({
  netFlux %>% filter(LUC %in% input$luc, GCM %in% input$gcm, RCP %in% input$rcp, EcoregionName==input$ecoregion, Flux=="NECB") %>%
    filter(Timestep>=input$years[1], Timestep<=input$years[2]) %>% group_by(LUC,GCM,RCP,EcoregionName,Flux) %>% summarise(yrMean=mean(Mean), minMean=min(Mean), maxMean=max(Mean))
})


output$necbPlot <- renderPlotly({
  necb = ggplot(data=necbData(), aes(x=GCM, y=yrMean, fill=GCM, ymin=minMean, ymax=maxMean)) +
    geom_crossbar(stat="identity", show.legend = FALSE) +
    scale_fill_ipsum() +
    scale_color_ipsum() +
    facet_wrap(RCP~LUC) +
    theme_minimal() +
    labs(y="MMT C", caption="Average Annual NECB") +
    theme(plot.margin=margin(0,0,0,0), axis.text.x=element_blank())
  
  ggplotly(necb)
  
})

